
/*
  Auto generated by version 0.0 of swarm_class_generator.py
  on geop-265.ethz.ch, at 2015-08-25 11:20:15.229979 by dmay
*/

#ifndef __QPntVolCoefEVSS_DEF_H__
#define __QPntVolCoefEVSS_DEF_H__

#include <mpi.h>

typedef struct {
 double tau[6];
} QPntVolCoefEVSS;

typedef enum {
  QPVCEVSS_deviatoric_stress = 0
} QPntVolCoefEVSSTypeName;

extern const char QPntVolCoefEVSS_classname[];

extern const int QPntVolCoefEVSS_nmembers;

extern const size_t QPntVolCoefEVSS_member_sizes[];

extern const char *QPntVolCoefEVSS_member_names[];

extern MPI_Datatype MPI_QPNTVOLCOEFEVSS;

/* prototypes */
void QPntVolCoefEVSSGetField_deviatoric_stress(QPntVolCoefEVSS *point,double *data[]);
void QPntVolCoefEVSSSetField_deviatoric_stress(QPntVolCoefEVSS *point,double data[]);
void QPntVolCoefEVSSView(QPntVolCoefEVSS *point);
void QPntVolCoefEVSSVTKWriteAsciiAllFields(FILE *vtk_fp,const int N,const QPntVolCoefEVSS points[]);
void QPntVolCoefEVSSPVTUWriteAllPPointDataFields(FILE *vtk_fp);
void QPntVolCoefEVSSVTKWriteBinaryAppendedHeaderAllFields(FILE *vtk_fp,int *offset,const int N,const QPntVolCoefEVSS points[]);
void QPntVolCoefEVSSVTKWriteBinaryAppendedDataAllFields(FILE *vtk_fp,const int N,const QPntVolCoefEVSS points[]);
int QPntVolCoefEVSSCreateMPIDataType(MPI_Datatype *ptype);

#endif
